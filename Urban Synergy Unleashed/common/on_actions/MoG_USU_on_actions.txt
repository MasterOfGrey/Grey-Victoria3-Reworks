on_game_started = {
	on_actions = {
		mog_usu_game_started_on_action
	}
}

mog_usu_game_started_on_action = {
	effect = {
		every_state = {
			usu_manage_trade_centre_type = yes
		}
	}
}

# Root = Country

### Urbanization Actions
on_yearly_pulse_country = {
	### Urban Action
	on_actions = {
		delay = { days = { 15 350 } }
		mog_urban_on_action
		mog_fix_forgotten_ports_action
	}
	
	### Canal Action
	random_events = {
		9 = 0
		1 = canal_dividends.1
	}
}

# scope:target = Uprising country
on_revolution_start = { on_actions = { mog_urban_on_action } }
on_secession_start = { on_actions = { mog_urban_on_action } }

# Root = Releasing Country
# scope:target = Released Country
on_country_released_as_own_subject = { on_actions = { mog_urban_on_action } }
on_country_released_as_overlord_subject = { on_actions = { mog_urban_on_action } }
on_country_released_as_independent = { on_actions = { mog_urban_on_action } }

mog_urban_on_action = {
	effect = {
		trigger_event = {			# Call event to update mog_urbanization modifiers.
			id   = USU_secret_ev.1
			days = 1
		}
	}
}

mog_fix_forgotten_ports_action = {
	effect = {
		every_scope_state = {	# Turn off port subsidies for players who forget so it doesn't break UC's.
			if = {
				limit = {
					b:building_port ?= {
						is_subsidized = yes
						level > 5
					}
				}
				b:building_port ?= {
					set_subsidized = no
				}
			}
		}
	}
}

## MONTHLIES
on_monthly_pulse_country = {
	on_actions = {
		mog_trade_centre_type_on_action
	}
}

### Logistics Action
#mog_logistics_land_trade_on_action = {
#	effect = {
#		remove_modifier = mog_logistics_land_trade
#		add_modifier = {
#			name = mog_logistics_land_trade
#			multiplier = {
#				add = 1
#				multiply = mog_land_trade_from_logistics
#			}
#		}
#	}
#}

# Set Trade Center as inland or port-side.
mog_trade_centre_type_on_action = {
	effect = {
		every_scope_state = {
			usu_manage_trade_centre_type = yes
		}
	}
}

# Root = Building
on_building_built = {
	on_actions = {
		mog_usu_building_built_on_action
	}
}

mog_usu_building_built_on_action = {
	effect = {
		if = {
			limit = {
				OR = {
					is_building_type = building_port
					is_building_type = building_river_port
				}
			}
			state = {
				usu_manage_trade_centre_type = yes
			}
		}
	}
}

# Root = Building
on_production_method_changed = {
	on_actions = {
		mog_usu_production_method_changed_on_action
	}
}

mog_usu_production_method_changed_on_action = {
	effect = {
		if = {
			limit = {
				is_building_type = building_trade_center
			}
			state = {
				usu_manage_trade_centre_type = yes
			}
		}
	}
}

### Construction Action
# Root = The applicable country
# scope:technology = The technology type they just acquired
on_acquired_technology = {
	on_actions = {
		mog_construction_max_level_adjustment_on_action
		mog_urban_on_action # Also triggered here for minimal downtime
	}
}

mog_construction_max_level_adjustment_on_action = {
	effect = {
		remove_modifier = mog_construction_max_level_adjustment
		add_modifier = {
			name = mog_construction_max_level_adjustment
			multiplier = {
				add = 1
				multiply = mog_construction_max_level_adjustment_calc
			}
		}
	}
}